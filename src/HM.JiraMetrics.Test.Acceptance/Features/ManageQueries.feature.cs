// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.Specs
{
    using TechTalk.SpecFlow;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ManageQueries")]
    public partial class ManageQueriesFeature
    {

        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "ManageQueries.feature"
#line hidden

        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ManageQueries", "In order to get reports out fast\nAs a manager with not that much time\nI need ways" +
                    " to re-use old jql queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }

        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }

        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reuse jql between sessions")]
        public virtual void ReuseJqlBetweenSessions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reuse jql between sessions", ((string[])(null)));
#line 7
            this.ScenarioSetup(scenarioInfo);
#line 8
            testRunner.Given("program is started", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[]
            {
                "jql"
            });
            table1.AddRow(new string[]
            {
                "search/jql=key=DISCO-776&expand=changelog"
            });
            table1.AddRow(new string[]
            {
                "search/jql=project=OFU&expand=changelog&maxResults=500"
            });
#line 9
            testRunner.And("there exists jql queries in the combobox:", ((string)(null)), table1, "And ");
#line 13
            testRunner.And("I select first query and modify it to: \"search/jql=key=DISCO-777&expand=changelog" +
                           "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
            testRunner.And("the checkbox \"Save query\" is \"checked\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
            testRunner.When("I restart the program", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[]
            {
                "jql"
            });
            table2.AddRow(new string[]
            {
                "search/jql=key=DISCO-776&expand=changelog"
            });
            table2.AddRow(new string[]
            {
                "search/jql=project=OFU&expand=changelog&maxResults=500"
            });
            table2.AddRow(new string[]
            {
                "search/jql=key=DISCO-777&expand=changelog"
            });
#line 16
            testRunner.Then("the combobox should contain:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Discard jql between sessions")]
        public virtual void DiscardJqlBetweenSessions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Discard jql between sessions", ((string[])(null)));
#line 23
            this.ScenarioSetup(scenarioInfo);
#line 24
            testRunner.Given("program is started", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[]
            {
                "jql"
            });
            table3.AddRow(new string[]
            {
                "search/jql=key=DISCO-776&expand=changelog"
            });
            table3.AddRow(new string[]
            {
                "search/jql=project=OFU&expand=changelog&maxResults=500"
            });
#line 25
            testRunner.And("there exists jql queries in the combobox:", ((string)(null)), table3, "And ");
#line 29
            testRunner.And("the checkbox \"Save query\" is \"unchecked\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
            testRunner.And("I select first query and modify it to: \"search/jql=key=DISCO-777&expand=changelog" +
                           "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
            testRunner.When("I restart the program", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[]
            {
                "jql"
            });
            table4.AddRow(new string[]
            {
                "search/jql=key=DISCO-776&expand=changelog"
            });
            table4.AddRow(new string[]
            {
                "search/jql=project=OFU&expand=changelog&maxResults=500"
            });
#line 32
            testRunner.Then("the combobox should contain:", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
